#!/usr/bin/env zsh

N_ID=37
SECONDS_T=$((24 * 60 * 60))
ICON="/usr/share/icons/gnome/16x16/apps/system-software-update.png"
APT_LOG="/var/log/apt/history.log"

if [[ -z $DBUS_SESSION_BUS_ADDRESS ]]; then
    eval "export $(egrep -z DBUS_SESSION_BUS_ADDRESS /proc/$(pgrep -u $LOGNAME gdm-x-session)/environ)"
fi

if [[ -z $DISPLAY ]]; then
    export DISPLAY=:0
fi

seconds_to_hms() {
    local seconds minutes hours s m

    seconds="$1"
    minutes=$(($seconds / 60))
    hours=$(($minutes / 60))

    s=$(($seconds % 60))
    m=$(($minutes % 60))
    printf "${hours}h ${m}m ${s}s"
}

get_update_time() {
    grep "Commandline: apt upgrade" -B 1 "$APT_LOG" |
        awk 'BEGIN{RS="--\n"} END{print}' |
        head -n 1 |
        cut -d " " -f 2-4 |
        xargs -i date -d {} +%s
}

get_update_time_v2() {
    cat $HOME/.scripts/last_update
}

main() {
    local update_t diff_t updated_at diff_txt update_msg

    update_t=$(get_update_time_v2)
    diff_t=$(($(date +%s) - $update_t))
    updated_at=$(date -d "@${update_t}" '+%Y-%m-%d %H:%M:%S')

    diff_txt=$(seconds_to_hms $diff_t)
    update_msg="Last update was on $updated_at ($diff_txt ago)."

    printf "$update_msg\n"

    if [[ "$diff_t" -gt "$SECONDS_T" ]]; then
        notify-send -u normal -r $N_ID -t 0 -i $ICON "Please update your system." $update_msg
    fi
}

main
